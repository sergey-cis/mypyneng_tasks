# -*- coding: utf-8 -*-
"""
Завдання 17.3b

Створити функцію transform_topology, яка перетворює топологію на формат, що
підходить для функції draw_topology.

Функція очікує як аргумент ім'я файлу у форматі YAML, в якому зберігається
топологія.

Функція повинна зчитувати дані з YAML файлу, обробити їх відповідно, щоб
функція повертала словник такого виду:
    {('R4', 'Fa 0/1'): ('R5', 'Fa 0/1'),
     ('R4', 'Fa 0/2'): ('R6', 'Fa 0/0')}

Функція transform_topology повинна не тільки змінювати формат топології, але й
видаляти з'єднання, що "дублюються" (їх найкраще видно на схемі, яку генерує
функція draw_topology з файлу draw_network_graph.py).
Тут "дубльовані" з'єднання, це ситуація коли в словнику є дві з'єднання:
    ("R1", "Eth0/0"): ("SW1", "Eth0/1")
    ("SW1", "Eth0/1"): ("R1", "Eth0/0")

Через те, що один і той же лінк описується двічі, на схемі будуть зайві
з'єднання. Завдання залишити лише одне з цих лінків у словнику, не важливо
який.

Перевірити роботу функції на файлі topology.yaml (має бути створений у завданні
17.3a). З отриманого словника треба згенерувати зображення топології з
допомогою функції draw_topology. Не копіюйте код функції draw_topology з файлу
draw_network_graph.py.

Результат має виглядати так само, як схема у файлі task_17_3b_topology.svg

При цьому:
* інтерфейси повинні бути записані з пробілом Fa 0/0
* розташування пристроїв на схемі може бути іншим
* з'єднання повинні відповідати схемі
* на схемі не повинно бути лінків, що "дублюються"

> Для виконання цього завдання повинен бути встановлений graphviz:
> apt-get install graphviz

> І модуль python для роботи з graphviz:
> pip install graphviz

"""
